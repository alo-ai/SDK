<h1 id='video-sdk'>Video SDK</h1><h2 id='video-sdk-overview'>Overview</h2>
<p>TODO: Add some text here</p>
<h2 id='video-sdk-prerequisites'>Prerequisites</h2>
<p>TODO: Add some text here?</p>
<h3 id='video-sdk-prerequisites-get-an-api-key'>Get an API Key</h3>
<p>TODO: Explain how to get the account credentials</p>
<h3 id='video-sdk-prerequisites-get-the-javascript-sdk'>Get the Javascript SDK</h3>
<blockquote>
<p>Import the SDK</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="k">import</span> <span class="nx">AloVideo</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">alo-video-js</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div>
<p><code>npm install --save alo-video-js</code></p>

<p>TODO: will we also have a CDN version of the SDK?</p>
<h2 id='video-sdk-connecting-to-the-video-service'>Connecting to the Video Service</h2>
<p>In order to instantiate the AloVideo object you are required to provide a number of properties. Once you have defined the properties you instantiate as shown:</p>

<p><code>aloVideo = new AloVideo(props);</code></p>

<p>To connect to the video service you call the <code>connect()</code> method:</p>

<p><code>aloVideo.connect();</code></p>
<h3 id='video-sdk-connecting-to-the-video-service-user-object'>User Object</h3>
<p>TODO: create a User object class (maybe call it Participant instead)</p>

<p>The user object defines the user that will be participating in the video channels.</p>

<blockquote>
<p>Sample User Object.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code> <span class="nx">user</span><span class="p">:</span> <span class="p">{</span>
   <span class="nl">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Some unique id</span><span class="dl">"</span><span class="p">,</span>
   <span class="nx">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Some display name for the user</span><span class="dl">"</span><span class="p">,</span>
   <span class="nx">deviceId</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Some unique id associated with user's current device</span><span class="dl">"</span>
 <span class="p">}</span>
</code></pre></div>
<table><thead>
<tr>
<th>Parameter</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>Yes</td>
<td>Unique User identifier</td>
</tr>
<tr>
<td>name</td>
<td>No</td>
<td>Name to be displayed in the list of participants for the current user.  If not provided a name will be generated from the user <code>id</code> and <code>deviceId</code></td>
</tr>
<tr>
<td>deviceId</td>
<td>No</td>
<td>Unique device identifier.  If not provided a random id will be generated.</td>
</tr>
</tbody></table>
<h3 id='video-sdk-connecting-to-the-video-service-current-channel-object'>Current Channel Object</h3>
<p>TODO: create a Channel object class</p>

<p>The current channel object defines the video channel that the user is currently participating in.</p>

<blockquote>
<p>Sample Current Channel Object.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">currentChannel</span><span class="p">:</span> <span class="p">{</span>
  <span class="nl">id</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Unique id for the channel</span><span class="dl">'</span>
<span class="p">}</span>
</code></pre></div>
<table><thead>
<tr>
<th>Parameter</th>
<th>Required</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>id</td>
<td>Yes</td>
<td></td>
<td>Unique alphanumeric channel identifier</td>
</tr>
</tbody></table>
<h3 id='video-sdk-connecting-to-the-video-service-instantiation-properties'>Instantiation Properties</h3><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">function</span> <span class="nx">connectToVideo</span><span class="p">()</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">aloConnections</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">mutexUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;PROVIDED BY ĀLO&gt;</span><span class="dl">'</span><span class="p">,</span>
      <span class="na">videoUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;PROVIDED BY ĀLO&gt;</span><span class="dl">'</span><span class="p">,</span>
      <span class="c1">// TODO: need a better name for this URL to get the user token</span>
      <span class="na">videoRESTUrl</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;PROVIDED BT ALO&gt;</span><span class="dl">'</span>
    <span class="p">};</span>
    <span class="kd">let</span> <span class="nx">user</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">12345</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">James Jones</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">deviceId</span><span class="p">:</span> <span class="dl">"</span><span class="s2">abcd-efsg-wqer-qewe</span><span class="dl">"</span>
    <span class="p">};</span>
    <span class="kd">let</span> <span class="nx">channel</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">myChannelId</span><span class="dl">"</span>
    <span class="p">};</span>
    <span class="kd">let</span> <span class="nx">props</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">user</span><span class="p">:</span> <span class="nx">user</span><span class="p">,</span>
      <span class="na">currentChannel</span><span class="p">:</span> <span class="nx">channel</span><span class="p">,</span>
      <span class="na">aloConnections</span><span class="p">:</span> <span class="nx">aloConnections</span>
    <span class="p">};</span>
    <span class="nx">aloVideo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AloVideo</span><span class="p">(</span><span class="nx">props</span><span class="p">);</span>
    <span class="nx">aloVideo</span><span class="p">.</span><span class="nx">connect</span><span class="p">();</span>
    <span class="nx">initializeEventListeners</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="kd">function</span> <span class="nx">initializeEventListeners</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">aloVideo</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">onDisconnect</span><span class="dl">'</span><span class="p">,</span> <span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">onDisconnect:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span>
    <span class="p">})</span>

    <span class="nx">aloVideo</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">onConnectionChange</span><span class="dl">'</span><span class="p">,</span> <span class="nx">action</span><span class="p">(</span><span class="nx">e</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">onConnectionChange:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span>

      <span class="k">switch</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">.</span><span class="nx">state</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="nx">aloVideo</span><span class="p">.</span><span class="na">CONNECTION_STATUS_CONNECTED</span><span class="p">:</span>
          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ālo video connected</span><span class="dl">"</span><span class="p">);</span>
          <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nx">aloVideo</span><span class="p">.</span><span class="na">CONNECTION_STATUS_DISCONNECTED</span><span class="p">:</span>
          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ālo video disconnected</span><span class="dl">"</span><span class="p">);</span>
          <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nx">aloVideo</span><span class="p">.</span><span class="na">CONNECTION_STATUS_ERROR</span><span class="p">:</span>
          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ālo video connection error</span><span class="dl">"</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span>
          <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nx">aloVideo</span><span class="p">.</span><span class="na">CONNECTION_STATUS_CONNECTING</span><span class="p">:</span>
          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ālo video connecting</span><span class="dl">"</span><span class="p">);</span>
          <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span> <span class="nx">aloVideo</span><span class="p">.</span><span class="na">CONNECTION_STATUS_RECONNECT_PENDING</span><span class="p">:</span>
          <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ālo video reconnect pending.  Retrying in </span><span class="dl">"</span><span class="p">,</span> <span class="nx">e</span><span class="p">.</span><span class="nx">detail</span><span class="p">.</span><span class="nx">pendingRestartSeconds</span><span class="p">);</span>
          <span class="k">break</span><span class="p">;</span>
      <span class="p">}</span>

    <span class="p">}));</span>
<span class="p">}</span>
</code></pre></div>

<table><thead>
<tr>
<th>Parameter</th>
<th>Required</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>user</td>
<td>Yes</td>
<td></td>
<td>The <a href="#video-sdk-connecting-to-the-video-service-user-object">user</a> object that defines the current user</td>
</tr>
<tr>
<td>currentChannel</td>
<td>No</td>
<td></td>
<td>The <a href="#video-sdk-connecting-to-the-video-service-current-channel-object">current channel</a> object defining which channel to join upon connection to the service.  If no channel is provided the user will connect to the video service but will not immediately join a channel.</td>
</tr>
<tr>
<td>aloConnections</td>
<td>Yes</td>
<td></td>
<td>TBD</td>
</tr>
</tbody></table>

<blockquote>
<p>Example onConnectionChange event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;CONNECTING&quot;</span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;CONNECTED&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;DISCONNECTED&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;ERROR&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Lost connection to the server&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;RECONNECT_PENDING&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Video Server Reconnect Pending&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">pendingRestartSeconds:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="err">retryCount:</span><span class="w"> </span><span class="mi">3</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-connection-related-events'>Connection Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onConnectionChange</td>
<td>As the connection to the Video Service is established events showing the following statuses will be dispatched: AloVideo.CONNECTION_STATUS_CONNECTING, AloVideo.CONNECTION_STATUS_CONNECTED, AloVideo.STATUS_NOT_CONNECTED, AloVideo.CONNECTION_STATUS_ERROR, AloVideo.CONNECTION_STATUS_CONNECTED, AloVideo.CONNECTION_STATUS_RECONNECT_PENDING.</td>
</tr>
<tr>
<td>onDisconnect</td>
<td>Once disconnected, either intentionally or due to an error, the onDisconnect event will be dispatched.</td>
</tr>
</tbody></table></p>

<aside class="notice">
After you call the <code>connect()</code> method the Video Service will start dispatching events that you should add event listeners for&#46;
See <a href="#video-sdk-handling-events">Handling Events</a> for more information about the types of events that are available.
</aside>
<h2 id='video-sdk-disconnecting-from-the-video-service'>Disconnecting from the Video Service</h2>
<blockquote>
<p>Video Service Disconnect.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span>
</code></pre></div>
<p>Invoking the <code>disconnect()</code> method will remove the user from any channel that they are currently participating in.  All connections to the video service will also be terminated.  You will need to <a href="#video-sdk-connecting-to-the-video-service">connect</a> again before attempting to join a channel.</p>

<blockquote>
<p>Example onDisconnect event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">when</span><span class="w"> </span><span class="err">disconnect()</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">called</span><span class="w">
</span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;DISCONNECTED&quot;</span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="err">//</span><span class="w"> </span><span class="err">When</span><span class="w"> </span><span class="err">disconnected</span><span class="w"> </span><span class="err">unexpectedly</span><span class="w">
</span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;ERROR&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Lost connection to the server&quot;</span><span class="p">,</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-disconnect-related-events'>Disconnect Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onDisconnect</td>
<td>Once disconnected, either intentionally or due to an error, the onDisconnect event will be dispatched.</td>
</tr>
</tbody></table></p>
<h2 id='video-sdk-change-channel'>Change Channel</h2>
<blockquote>
<p>Sample Channel Change.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">changeChannel</span><span class="p">({</span><span class="na">id</span><span class="p">:</span> <span class="dl">'</span><span class="s1">myChannelId</span><span class="dl">'</span><span class="p">});</span>
</code></pre></div>
<p>To change the video channel you invoke the <code>changeChannel()</code> method.</p>

<blockquote>
<p>Example onJoinChannel event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINING&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINED&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINING&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Something went wrong&quot;</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-channel-joining-related-events'>Channel Joining Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onJoinChannel</td>
<td>As the connection to the Video Service is established events showing the following statuses will be dispatched: AloVideo.CHANNEL_STATUS_JOINING, AloVideo.CHANNEL_STATUS_JOINED, AloVideo.STATUS_FAILED.</td>
</tr>
</tbody></table></p>
<h2 id='video-sdk-input-device-selection'>Input Device Selection</h2><h2 id='video-sdk-publishing-local-video'>Publishing Local Video</h2>
<blockquote>
<p>Sample Publish Video.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">publishVideo</span><span class="p">();</span>
</code></pre></div>
<blockquote>
<p>Sample Unpublish Video.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">unPublishVideo</span><span class="p">();</span>
</code></pre></div>
<p>Before allowing the end user to publish video you should make sure you have received a <code>VIDEO_STATE_AVAILABLE</code> state from the <code>onVideoAvailabilityChange</code> event.  TODO: link to onVideoAvailabilityChange in the Handling Events section of this doc</p>

<p>To publish video you invoke the <code>publishVideo()</code> method.</p>

<p>To publish video you invoke the <code>unPublishVideo()</code> method.</p>

<blockquote>
<p>Example publishing event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">onVideoAvailabilityChange</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;VIDEO_STATE_AVAILABLE&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">onVideoChannelDetailStatus</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;VIDEO_LOCAL_PUBLISH_STATE_PUBLISH_PENDING&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-publishing-local-video-related-events'>Publishing Local Video Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onVideoAvailabilityChange</td>
<td>This event will let you know when the publishing video is available (meaning you are connected to a video channel). The possible states are AloVideo.VIDEO_STATE_AVAILABLE and AloVideo.VIDEO_STATE_UNAVAILABLE.</td>
</tr>
<tr>
<td>onVideoChannelDetailStatus</td>
<td>This event will give the current state of publishing your local video.  The possible states are AloVideo.VIDEO_LOCAL_PUBLISH_STATE_UNPUBLISHED, AloVideo.VIDEO_LOCAL_PUBLISH_STATE_PUBLISH_PENDING and AloVideo.VIDEO_LOCAL_PUBLISH_STATE_PUBLISHED.</td>
</tr>
<tr>
<td>onParticipantsChanged</td>
<td>When a participant (including the current user) published/unpublished video this event will be dispatched. See <a href="#video-sdk-participants">Participants</a> for more information.</td>
</tr>
</tbody></table></p>
<h2 id='video-sdk-participants'>Participants</h2>
<p>TODO: explain what a channel participant is</p>

<p>TODO: Participant should have deviceId if possible</p>

<p>TODO: participant id vs user id is confusing and we need a way to convey the difference (or hide the difference).</p>

<blockquote>
<p>Example onParticipantsChanged event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">currentParticipantId:</span><span class="w"> </span><span class="s2">&quot;871f35b5-479e-4b99-acba-71ab6fe50768&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">},</span><span class="w">
    </span><span class="err">participants:</span><span class="w"> </span><span class="err">Array(</span><span class="mi">2</span><span class="err">)</span><span class="w">
      </span><span class="mi">0</span><span class="err">:</span><span class="w"> </span><span class="err">Participant</span><span class="w">
        </span><span class="err">id:</span><span class="w"> </span><span class="s2">&quot;871f35b5-479e-4b99-acba-71ab6fe50768&quot;</span><span class="w">
        </span><span class="err">isPublishingVideo:</span><span class="w"> </span><span class="kc">true</span><span class="w">
        </span><span class="err">mediaStream:</span><span class="w"> </span><span class="err">MediaStream</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
        </span><span class="err">muted:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">name:</span><span class="w"> </span><span class="s2">&quot;Jim Jones&quot;</span><span class="w">
        </span><span class="err">userId:</span><span class="w"> </span><span class="s2">&quot;2963&quot;</span><span class="w">
      </span><span class="mi">1</span><span class="err">:</span><span class="w"> </span><span class="err">Participant</span><span class="w">
        </span><span class="err">id:</span><span class="w"> </span><span class="s2">&quot;fd8aef24-bbb4-48aa-9d7c-f90d1c30d9a5&quot;</span><span class="w">
        </span><span class="err">isPublishingVideo:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">mediaStream:</span><span class="w"> </span><span class="kc">null</span><span class="w">
        </span><span class="err">muted:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">name:</span><span class="w"> </span><span class="s2">&quot;Sally Smith&quot;</span><span class="w">
        </span><span class="err">userId:</span><span class="w"> </span><span class="s2">&quot;6487&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-channel-participant-related-events'>Channel Participant Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onParticipantsChanged</td>
<td>When you join a channel you will there will be an event that gives you a list of the current channel participants.  While in a given channel a similar event each time a participant enters or leaves the channel as well as when they publish/unpublish video.</td>
</tr>
</tbody></table></p>
<h2 id='video-sdk-handling-remote-video-streams'>Handling Remote Video Streams</h2>
<p>TODO: Explain how to get video streams from the participants list</p>
<h2 id='video-sdk-muting-unmuting-remote-video-streams'>Muting/Unmuting Remote Video Streams</h2>
<blockquote>
<p>Sample Mute Participant.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">muteParticipant</span><span class="p">(</span><span class="nx">participantId</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</code></pre></div>
<blockquote>
<p>Sample Unmute Participant.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">muteParticipant</span><span class="p">(</span><span class="nx">participantId</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</code></pre></div>
<p>You have the ability to mute/unmute audio from remote streams with the <code>muteParticipant()</code> method.</p>

<blockquote>
<p>Example mute event payload</p>
</blockquote>

<p><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="p">{</span>
  <span class="nl">detail</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">participant</span><span class="p">:</span> <span class="nx">Participant</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">1145_ON_7d310571-01dd-475c-9505-d06383414581</span><span class="dl">&quot;</span>
    <span class="na">isPublishingVideo</span><span class="p">:</span> <span class="kc">true</span>
    <span class="na">mediaStream</span><span class="p">:</span> <span class="kc">null</span>
    <span class="na">muted</span><span class="p">:</span> <span class="kc">true</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">Jim Jones</span><span class="dl">&quot;</span>
    <span class="na">userId</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">2963</span><span class="dl">&quot;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><h3 id='presence-sdk-handling-events-mute-related-events'>Mute Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onMuteChange</td>
<td>After <code>muteParticipant()</code> is called there will be an event stating whether or not the given participant is currently muted.</td>
</tr>
</tbody></table></p>
<h2 id='video-sdk-recording-video'>Recording Video</h2>
<blockquote>
<p>Sample Video Recording.</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">publishVideo</span><span class="p">({</span><span class="na">record</span><span class="p">:</span> <span class="kc">true</span><span class="p">});</span>
</code></pre></div>
<p>To record video you can use the optional <code>record</code> propertly when publishing your video.</p>

<p>TODO: explain how/where they can access the vidfeo after it has been processed.</p>
<h2 id='video-sdk-automatic-reconnects'>Automatic Reconnects</h2>
<p>By default the Video SDK will automatically try to reconnect if there is any sort of connection issue.</p>

<p>TODO: explain how reconnects work
TODO: explain the option to turn off auto reconnects</p>
<h2 id='video-sdk-error-messages'>Error Messages</h2><h2 id='video-sdk-api'>API</h2><h2 id='video-sdk-handling-events'>Handling Events</h2>
<p>In order to listen for AloVideo events you need to add event listeners to the AloVideo.events object.  For example:</p>

<p><code>
aloVideo.events.addEventListener(&#39;onDisconnect&#39;, event =&gt; {
      console.log(&quot;onDisconnect:&quot;, event.detail);
})
</code></p>

<aside class="notice">
The event object may contain additional information about the event in <code>event.detail</code>
</aside>

<blockquote>
<p>Sample for handling video events</p>
</blockquote>
<div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="nx">aloVideo</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">onDisconnect</span><span class="dl">'</span><span class="p">,</span> <span class="nx">event</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">onDisconnect:</span><span class="dl">"</span><span class="p">,</span> <span class="nx">event</span><span class="p">.</span><span class="nx">detail</span><span class="p">);</span>
<span class="p">})</span>
</code></pre></div>
<p>TODO: Outline all the possible event messages that can be received.</p>

<blockquote>
<p>Example onConnectionChange event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;CONNECTING&quot;</span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;CONNECTED&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;DISCONNECTED&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;ERROR&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Lost connection to the server&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;RECONNECT_PENDING&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Video Server Reconnect Pending&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">pendingRestartSeconds:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
  </span><span class="err">retryCount:</span><span class="w"> </span><span class="mi">3</span><span class="w">
  </span><span class="err">user:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-connection-related-events'>Connection Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onConnectionChange</td>
<td>As the connection to the Video Service is established events showing the following statuses will be dispatched: AloVideo.CONNECTION_STATUS_CONNECTING, AloVideo.CONNECTION_STATUS_CONNECTED, AloVideo.STATUS_NOT_CONNECTED, AloVideo.CONNECTION_STATUS_ERROR, AloVideo.CONNECTION_STATUS_CONNECTED, AloVideo.CONNECTION_STATUS_RECONNECT_PENDING.</td>
</tr>
<tr>
<td>onDisconnect</td>
<td>Once disconnected, either intentionally or due to an error, the onDisconnect event will be dispatched.</td>
</tr>
</tbody></table></p>

<blockquote>
<p>Example onDisconnect event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">when</span><span class="w"> </span><span class="err">disconnect()</span><span class="w"> </span><span class="err">is</span><span class="w"> </span><span class="err">called</span><span class="w">
</span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;DISCONNECTED&quot;</span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="err">//</span><span class="w"> </span><span class="err">When</span><span class="w"> </span><span class="err">disconnected</span><span class="w"> </span><span class="err">unexpectedly</span><span class="w">
</span><span class="p">{</span><span class="w">
 </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;ERROR&quot;</span><span class="p">,</span><span class="w">
  </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Lost connection to the server&quot;</span><span class="p">,</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-disconnect-related-events'>Disconnect Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onDisconnect</td>
<td>Once disconnected, either intentionally or due to an error, the onDisconnect event will be dispatched.</td>
</tr>
</tbody></table></p>

<blockquote>
<p>Example onJoinChannel event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINING&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINED&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"></p>

<p></span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;JOINING&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">message:</span><span class="w"> </span><span class="s2">&quot;Something went wrong&quot;</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-channel-joining-related-events'>Channel Joining Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onJoinChannel</td>
<td>As the connection to the Video Service is established events showing the following statuses will be dispatched: AloVideo.CHANNEL_STATUS_JOINING, AloVideo.CHANNEL_STATUS_JOINED, AloVideo.STATUS_FAILED.</td>
</tr>
</tbody></table></p>

<blockquote>
<p>Example publishing event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">onVideoAvailabilityChange</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;VIDEO_STATE_AVAILABLE&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><div class="highlight"><pre class="highlight json tab-json"><code><span class="err">//</span><span class="w"> </span><span class="err">onVideoChannelDetailStatus</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">state:</span><span class="w"> </span><span class="s2">&quot;VIDEO_LOCAL_PUBLISH_STATE_PUBLISH_PENDING&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-publishing-local-video-related-events'>Publishing Local Video Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onVideoAvailabilityChange</td>
<td>This event will let you know when the publishing video is available (meaning you are connected to a video channel). The possible states are AloVideo.VIDEO_STATE_AVAILABLE and AloVideo.VIDEO_STATE_UNAVAILABLE.</td>
</tr>
<tr>
<td>onVideoChannelDetailStatus</td>
<td>This event will give the current state of publishing your local video.  The possible states are AloVideo.VIDEO_LOCAL_PUBLISH_STATE_UNPUBLISHED, AloVideo.VIDEO_LOCAL_PUBLISH_STATE_PUBLISH_PENDING and AloVideo.VIDEO_LOCAL_PUBLISH_STATE_PUBLISHED.</td>
</tr>
<tr>
<td>onParticipantsChanged</td>
<td>When a participant (including the current user) published/unpublished video this event will be dispatched. See <a href="#video-sdk-participants">Participants</a> for more information.</td>
</tr>
</tbody></table></p>

<blockquote>
<p>Example onParticipantsChanged event payloads</p>
</blockquote>

<p><div class="highlight"><pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="err">detail:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="err">currentParticipantId:</span><span class="w"> </span><span class="s2">&quot;871f35b5-479e-4b99-acba-71ab6fe50768&quot;</span><span class="p">,</span><span class="w">
    </span><span class="err">channel:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">},</span><span class="w">
    </span><span class="err">participants:</span><span class="w"> </span><span class="err">Array(</span><span class="mi">2</span><span class="err">)</span><span class="w">
      </span><span class="mi">0</span><span class="err">:</span><span class="w"> </span><span class="err">Participant</span><span class="w">
        </span><span class="err">id:</span><span class="w"> </span><span class="s2">&quot;871f35b5-479e-4b99-acba-71ab6fe50768&quot;</span><span class="w">
        </span><span class="err">isPublishingVideo:</span><span class="w"> </span><span class="kc">true</span><span class="w">
        </span><span class="err">mediaStream:</span><span class="w"> </span><span class="err">MediaStream</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">}</span><span class="w">
        </span><span class="err">muted:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">name:</span><span class="w"> </span><span class="s2">&quot;Jim Jones&quot;</span><span class="w">
        </span><span class="err">userId:</span><span class="w"> </span><span class="s2">&quot;2963&quot;</span><span class="w">
      </span><span class="mi">1</span><span class="err">:</span><span class="w"> </span><span class="err">Participant</span><span class="w">
        </span><span class="err">id:</span><span class="w"> </span><span class="s2">&quot;fd8aef24-bbb4-48aa-9d7c-f90d1c30d9a5&quot;</span><span class="w">
        </span><span class="err">isPublishingVideo:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">mediaStream:</span><span class="w"> </span><span class="kc">null</span><span class="w">
        </span><span class="err">muted:</span><span class="w"> </span><span class="kc">false</span><span class="w">
        </span><span class="err">name:</span><span class="w"> </span><span class="s2">&quot;Sally Smith&quot;</span><span class="w">
        </span><span class="err">userId:</span><span class="w"> </span><span class="s2">&quot;6487&quot;</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div><h3 id='presence-sdk-handling-events-channel-participant-related-events'>Channel Participant Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onParticipantsChanged</td>
<td>When you join a channel you will there will be an event that gives you a list of the current channel participants.  While in a given channel a similar event each time a participant enters or leaves the channel as well as when they publish/unpublish video.</td>
</tr>
</tbody></table></p>

<blockquote>
<p>Example mute event payload</p>
</blockquote>

<p><div class="highlight"><pre class="highlight javascript tab-javascript"><code><span class="p">{</span>
  <span class="nl">detail</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">participant</span><span class="p">:</span> <span class="nx">Participant</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">1145_ON_7d310571-01dd-475c-9505-d06383414581</span><span class="dl">&quot;</span>
    <span class="na">isPublishingVideo</span><span class="p">:</span> <span class="kc">true</span>
    <span class="na">mediaStream</span><span class="p">:</span> <span class="kc">null</span>
    <span class="na">muted</span><span class="p">:</span> <span class="kc">true</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">Jim Jones</span><span class="dl">&quot;</span>
    <span class="na">userId</span><span class="p">:</span> <span class="dl">&quot;</span><span class="s2">2963</span><span class="dl">&quot;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><h3 id='presence-sdk-handling-events-mute-related-events'>Mute Related Events</h3>
<table><thead>
<tr>
<th>Event</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>onMuteChange</td>
<td>After <code>muteParticipant()</code> is called there will be an event stating whether or not the given participant is currently muted.</td>
</tr>
</tbody></table></p>
